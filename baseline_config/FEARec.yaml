
n_layers: 2                      # (int) The number of transformer layers in transformer encoder.
n_heads: 2                       # (int) The number of attention heads for multi-head attention layer.
hidden_size: 64                  # (int) The number of features in the hidden state
inner_size: 256                  # (int) The inner hidden size in feed-forward layer.
hidden_dropout_prob: 0.2         # (float) The probability of an element to be zeroed.
attn_dropout_prob: 0.2           # (float) The probability of an attention score to be zeroed.
hidden_act: 'gelu'               # (str) The activation function in feed-forward layer.
layer_norm_eps: 1e-12            # (float) A value added to the denominator for numerical stability.
initializer_range: 0.02          # (float) The standard deviation for normal initialization.
loss_type: 'CE'                  # (str) The type of loss function.
lmd: 0.1                         # (float) The weight of unsupervised normalized CE loss.
lmd_sem: 0.1                     # (float) The weight of supervised normalized CE loss.

global_ratio: 1                  # (float) The ratio of frequency components
dual_domain: False               # (bool) Frequency domain processing or not
std: False                       # (bool) Use the specific time index or not
spatial_ratio: 0                 # (float) The ratio of the spatial domain and frequency domain
fredom: False                    # (bool)  Regularization in the frequency domain or not
fredom_type: None                # (str)  The type of loss in different scenarios
topk_factor: 1                   # (int)  To aggregate time delayed sequences with high autocorrelation


# dataset settings
#dataset: ml-1m
#MAX_ITEM_LIST_LENGTH: 200       # 200 for MovieLens-1M 50 for ml-20m
#USER_ID_FIELD: user_id
#ITEM_ID_FIELD: item_id
#TIME_FIELD: timestamp
#RATING_FIELD: rating
#load_col:
#    inter: [user_id, item_id, rating, timestamp]

#user_inter_num_interval: "[5,inf)"
#item_inter_num_interval: "[5,inf)"    
#filter_inter_by_user_or_item: True    # (bool) Whether or not to filter inter by user or item.

#dataset: amazon-beauty
#dataset: Amazon_Video_Games
#dataset: Amazon_Sports_and_Outdoors
#dataset: Amazon_Fashion
#MAX_ITEM_LIST_LENGTH: 50
#field_separator: "\t"
#seq_separator: " " 
#USER_ID_FIELD: user_id 
#ITEM_ID_FIELD: item_id 
#RATING_FIELD: rating 
#TIME_FIELD: timestamp 
#load_col:
#    inter: [user_id, item_id, rating, timestamp]
#NEG_PREFIX: neg_ #指定负采样前缀
#LABEL_FIELD: label #指定标签
#ITEM_LIST_LENGTH_FIELD: item_length #指定序列长度域
#LIST_SUFFIX: _list #指定序列前缀
#POSITION_FIELD: position_id #指定生成的序列位置id
#user_inter_num_interval: "[5,inf)" # 5-200 for sports  2-inf for fashion 5-inf for beauty
#item_inter_num_interval: "[5,inf)"




dataset: yelp
MAX_ITEM_LIST_LENGTH: 50
USER_ID_FIELD: user_id
ITEM_ID_FIELD: business_id
TIME_FIELD: date
RATING_FIELD: stars
load_col:
   inter: [user_id, business_id, stars, date]

user_inter_num_interval: "[5,100)"
item_inter_num_interval: "[5,100)"

# training settings
epochs: 200
train_batch_size: 2048 # 1024 for fashion
learner: adam
learning_rate: 0.001
eval_step: 1
stopping_step: 10
#训练过程中每个正样本对应的负样本数量
train_neg_sample_args: ~
#评估过程中每个正样本对应的负样本数量
#eval_neg_sample_num: 100

# evalution settings
metrics: ['Hit', 'NDCG', 'MRR']
valid_metric: NDCG@10
eval_batch_size: 4096
weight_decay: 0.0
topk: [10]